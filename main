<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <title>Snake Oyunu</title>
    <style>
        html,
        body {
            margin: 0;
            padding: 0;
            overflow: hidden;
            height: 100%;
            width: 100%;
            font-family: Arial, sans-serif;
            background: black;
        }
        
        canvas {
            display: block;
            background: #111;
        }
        /* ==== BAŞLIQ ==== */
        
        #gameTitle {
            position: absolute;
            top: 50px;
            left: 50%;
            transform: translateX(-50%);
            font-size: 48px;
            color: white;
            text-shadow: 2px 2px 4px rgb(68, 2, 2), 4px 4px 8px rgb(68, 2, 2), 6px 6px 12px rgb(68, 2, 2);
            z-index: 10;
            text-align: center;
        }
        /* ==== MENYULAR ==== */
        
        #menusContainer {
            display: flex;
            justify-content: center;
            align-items: flex-start;
            gap: 30px;
            position: absolute;
            top: 150px;
            left: 50%;
            transform: translateX(-50%);
            z-index: 10;
        }
        
        .menuBox {
            background: rgba(0, 0, 0, 0.8);
            padding: 20px;
            border: 2px solid white;
            text-align: center;
            color: white;
            width: 300px;
            height: 250px;
            overflow-y: auto;
            box-sizing: border-box;
        }
        /* ==== play duymesi ==== */
        
        #playBtn {
            display: block;
            margin: 20px auto;
            background-color: #28a745;
            color: white;
            font-size: 26px;
            font-weight: bold;
            padding: 20px 60px;
            border: none;
            border-radius: 15px;
            cursor: pointer;
            box-shadow: 0 5px #1c7430;
            transition: all 0.3s ease;
        }
        
        #playBtn:hover {
            background-color: #218838;
            transform: translateY(-2px);
            box-shadow: 0 7px #1c7430;
        }
        
        #playBtn:active {
            transform: translateY(1px);
            box-shadow: 0 3px #1c7430;
        }
        /* ==== reng secimi ==== */
        
        .color-circle {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: inline-block;
            margin: 5px;
            border: 2px solid white;
            cursor: pointer;
        }
        
        .color-circle.selected {
            box-shadow: 0 0 10px white;
        }
        
        input[type="text"] {
            width: 80%;
            padding: 8px;
            font-size: 16px;
            margin-top: 10px;
            border-radius: 5px;
            border: none;
        }
        /* ——— Stil ——— */
        
        .cl-overlay {
            position: fixed;
            inset: 0;
            background: rgba(0, 0, 0, .6);
            display: none;
            z-index: 999999;
            align-items: center;
            justify-content: center;
            backdrop-filter: blur(2px);
        }
        
        .cl-card {
            width: min(780px, 92vw);
            max-height: 86vh;
            background: #0f1115;
            color: #e9edf1;
            border: 1px solid #2a2f3a;
            border-radius: 16px;
            box-shadow: 0 10px 40px rgba(0, 0, 0, .45);
            overflow: hidden;
            display: flex;
            flex-direction: column;
        }
        
        .cl-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 14px 16px;
            background: #131722;
            border-bottom: 1px solid #2a2f3a;
        }
        
        .cl-header h3 {
            margin: 0;
            font-size: 18px;
            font-weight: 700;
        }
        
        .cl-actions {
            display: flex;
            align-items: center;
            gap: 8px;
        }
        
        .cl-btn {
            cursor: pointer;
            border: 1px solid #2a2f3a;
            background: #171b26;
            color: #e9edf1;
            padding: 8px 10px;
            border-radius: 10px;
            font-size: 13px;
        }
        
        .cl-btn:hover {
            background: #1d2230;
        }
        
        .cl-content {
            padding: 10px 16px 16px;
            overflow: auto;
            scrollbar-width: thin;
        }
        
        .cl-item {
            border: 1px solid #232836;
            border-radius: 12px;
            padding: 10px 12px;
            margin: 10px 0;
            background: #121621;
        }
        
        .cl-title {
            font-weight: 700;
            margin-bottom: 6px;
        }
        
        .cl-badges {
            display: flex;
            gap: 6px;
            flex-wrap: wrap;
            margin: 6px 0 10px;
        }
        
        .cl-badge {
            font-size: 11px;
            padding: 4px 8px;
            border-radius: 999px;
            border: 1px solid #2b3140;
            background: #171b26;
        }
        
        .cl-section {
            margin: 6px 0;
        }
        
        .cl-section h4 {
            font-size: 12px;
            letter-spacing: .2px;
            text-transform: uppercase;
            opacity: .85;
            margin: 6px 0;
        }
        
        .cl-list {
            margin: 0;
            padding-left: 18px;
        }
        
        .cl-fab {
            position: fixed;
            right: 16px;
            bottom: 16px;
            z-index: 999998;
            background: #0f62fe;
            color: white;
            border: none;
            outline: none;
            border-radius: 999px;
            padding: 10px 14px;
            font-weight: 700;
            cursor: pointer;
            box-shadow: 0 6px 20px rgba(15, 98, 254, .35);
        }
        
        .cl-fab:hover {
            filter: brightness(1.05);
        }
        
        .cl-muted {
            opacity: .7;
            font-size: 12px;
        }
    </style>
</head>

<body>

    <!-- ==== gmaename ==== -->
    <div id="gameTitle">Snake bX Game</div>

    <!-- ==== menu ==== -->
    <div id="menusContainer">

        <!-- menu one {realyy?} -->
        <div style="overflow:hidden;" id="menu" class="menuBox">
            <h2>Enter Nickname</h2>
            <input type="text" id="nickname" placeholder="Player">
            <button id="playBtn">Play</button>
        </div>

        <!-- options -->
        <div id="menu2" class="menuBox">
            <h2>Options</h2>
            <label for="speed">Speed: <span id="speedVal">15</span></label><br>
            <input type="range" id="speed" min="2" max="15" value="15"><br>
            <fieldset>
                <legend>Color</legend>
                <div class="color-circle selected" data-color="lime" style="background: lime;"></div>
                <div class="color-circle" data-color="blue" style="background: blue;"></div>
                <div class="color-circle" data-color="yellow" style="background: yellow;"></div>
                <div class="color-circle" data-color="purple" style="background: purple;"></div>
                <div class="color-circle" data-color="red" style="background: red;"></div>
                <div class="color-circle" data-color="white" style="background: white;"></div>
            </fieldset>
            <br>
            <label for="uzunluq">Uzunluq:</label>
            <input type="number" id="uzunluq" value="4" min="1">
            <button onclick="goster()">OK</button>

            <p>This game is still developing...</p>
        </div>

    </div>

    <!-- Changelog açmaq üçün üzən düymə -->
    <button id="cl-fab" class="cl-fab" title="Ctrl+L ilə aç">Changelog</button>

    <!-- Overlay & Kart -->
    <div id="cl-overlay" class="cl-overlay" role="dialog" aria-modal="true" aria-labelledby="cl-title">
        <div class="cl-card">
            <div class="cl-header">
                <h3 id="cl-title">Changelog</h3>
                <div class="cl-actions">
                    <button id="cl-mark-read" class="cl-btn" title="Bu versiyanı oxunmuş kimi işarələ" disabled>Oxunmuş kimi işarələ</button>
                    <button id="cl-close" class="cl-btn" title="Esc ilə də bağlana bilər">Bağla ✕</button>
                </div>
            </div>
            <div id="cl-content" class="cl-content"></div>
            <div style="padding:8px 16px; border-top:1px solid #2a2f3a; background:#131722" class="cl-muted">
                Qısa yol: <b>Ctrl + L</b> aç, <b>Esc</b> bağla. Son versiya dəyişəndə avtomatik göstərilir.
            </div>
        </div>
    </div>
    <!-- ==== OYUN sagesi(full) ==== -->
    <canvas id="gameCanvas"></canvas>

    <script>
        var deyerr = 4; // default uzunluq
        function goster() {
            let deyer = document.getElementById("uzunluq").value;
            alert("Seçilən uzunluq: " + deyer);
            deyerr = deyer;
            snakeLength = deyerr;
            // burada istədiyin əməliyyatı edə bilərsən
        }
        /* ==== esas deyisenler ==== */
        var canvas = document.getElementById("gameCanvas");
        var ctx = canvas.getContext("2d");
        var grid = 16,
            count = 0,
            speed = 15,
            playing = false;
        var snakeColor = "lime",
            snakeLength = deyerr; // defoult reng ve uzunluq
        var playerName = "Player"; // defoult name

        // ilann obyektimiz
        var snake = {
            x: 160,
            y: 160,
            dx: grid,
            dy: 0,
            cells: [],
            maxCells: snakeLength
        };

        // Alma obyektimiz
        var apple = {
            x: 320,
            y: 320
        };

        /* ==== funksiyalar ==== */
        function resizeCanvas() {
            canvas.width = window.innerWidth;
            canvas.height = window.innerHeight;
        }
        window.addEventListener('resize', resizeCanvas);
        resizeCanvas();

        function getRandomInt(min, max) {
            return Math.floor(Math.random() * (max - min)) + min;
        }

        function resetGame() {
            snake.x = 160;
            snake.y = 160;
            snake.dx = grid;
            snake.dy = 0;
            snake.cells = [];
            snake.maxCells = snakeLength;
            apple.x = getRandomInt(0, 25) * grid;
            apple.y = getRandomInt(0, 25) * grid;
        }

        /* ==== reng secimi ==== */
        var colorCircles = document.querySelectorAll(".color-circle");
        colorCircles.forEach(function(c) {
            c.addEventListener("click", function() {
                snakeColor = this.getAttribute("data-color");
                colorCircles.forEach(cc => cc.classList.remove("selected"));
                this.classList.add("selected");
            });
        });

        /* ==== suret slider==== */
        var speedSlider = document.getElementById("speed");
        var speedVal = document.getElementById("speedVal");
        speedSlider.addEventListener("input", function() {
            speed = parseInt(this.value);
            speedVal.textContent = speed;
        });


        document.getElementById("playBtn").addEventListener("click", function() {
            var inputName = document.getElementById("nickname").value.trim();
            playerName = inputName ? inputName : "Player";
            playing = true;
            document.getElementById("menusContainer").style.display = "none";
            document.getElementById("gameTitle").style.display = "none"; // oyun adi gizlensin (playclicked)
            resetGame();
        });

        /* ==== idare etme - > WASD) ==== */
        document.addEventListener("keydown", function(e) {
            if (!playing) return;
            if ((e.key === "ArrowLeft" || e.key === "a") && snake.dx === 0) {
                snake.dx = -grid;
                snake.dy = 0;
            } else if ((e.key === "ArrowUp" || e.key === "w") && snake.dy === 0) {
                snake.dy = -grid;
                snake.dx = 0;
            } else if ((e.key === "ArrowRight" || e.key === "d") && snake.dx === 0) {
                snake.dx = grid;
                snake.dy = 0;
            } else if ((e.key === "ArrowDown" || e.key === "s") && snake.dy === 0) {
                snake.dy = grid;
                snake.dx = 0;
            }
        });

        /* ==== esas game LOOP ==== */
        function loop() {
            requestAnimationFrame(loop);
            if (!playing) return;
            if (++count < speed) return;
            count = 0;

            ctx.clearRect(0, 0, canvas.width, canvas.height);

            // ilanin hreket cedveli
            snake.x += snake.dx;
            snake.y += snake.dy;

            // Divara deyende olsun
            if (snake.x < 0 || snake.x >= canvas.width || snake.y < 0 || snake.y >= canvas.height) {
                playing = false;
                document.getElementById("menusContainer").style.display = "flex";
                document.getElementById("gameTitle").style.display = "block";
                resetGame();
                return;
            }

            // ilanin huceyrenlerin goster
            snake.cells.unshift({
                x: snake.x,
                y: snake.y
            });
            if (snake.cells.length > snake.maxCells) snake.cells.pop();

            // Alma rengi
            ctx.fillStyle = "red";
            ctx.fillRect(apple.x, apple.y, grid - 1, grid - 1);

            // ilan rengi
            ctx.fillStyle = snakeColor;
            snake.cells.forEach(function(cell, index) {
                ctx.fillRect(cell.x, cell.y, grid - 1, grid - 1);

                // Alma yeyende boyusun bla
                if (cell.x === apple.x && cell.y === apple.y) {
                    snake.maxCells++;
                    apple.x = getRandomInt(0, 25) * grid;
                    apple.y = getRandomInt(0, 25) * grid;
                }
                /*
                                // ilan ozun vursa
                                for (var i = index + 1; i < snake.cells.length; i++) {
                                    if (cell.x === snake.cells[i].x && cell.y === snake.cells[i].y) {
                                        playing = false;
                                        document.getElementById("menusContainer").style.display = "flex";
                                        document.getElementById("gameTitle").style.display = "block";
                                        resetGame();
                                    }
                                }*/
            });

            // Nickname snake in utundedi (name)
            ctx.fillStyle = "white";
            ctx.font = "20px Arial";
            ctx.fillText(playerName, snake.x, snake.y - 10);
        }
        requestAnimationFrame(loop);

        /* ——— Məlumat (sənin verdiyinə oxşar struktur) ——— */
        const CHANGELOGS = [{
            version: "FINAL 1.4.5",
            date: "08.09.25",
            added: true,
            remove: false,
            fixed: true,
            addedContent: ["Two new colors: red and white.", "Added changelog overlay with auto open on new version."],
            removedContent: ["Touch die function."],
            fixedContent: [
                "If snake touch him own tail , he will no die."
            ]
        }, {
            version: "1.4.1",
            date: "04.09.25",
            added: true,
            remove: false,
            fixed: false,
            addedContent: ["snake Length, you can choose snake length before start game."],
            removedContent: [],
            fixedContent: []
        }, {
            version: "1.4.0",
            date: "01.09.25",
            added: false,
            remove: false,
            fixed: true,
            addedContent: [],
            removedContent: [],
            fixedContent: ["Fixed same color select bug. Now you can select same color again."]
        }, {
            version: "1.3.4",
            date: "27.08.25",
            added: true,
            remove: false,
            fixed: true,
            addedContent: ["Added color selection feature. and added 4 new colors: blue, yellow, purple, lime."],
            removedContent: [],
            fixedContent: ["Fixed Speed slider bug.", "Now speed slider works correctly."]
        }, {
            version: "1.4.0",
            date: "021.08.25",
            added: true,
            remove: false,
            fixed: true,
            addedContent: ["Added player name feature."],
            removedContent: [],
            fixedContent: ["Changed game canvas to full screen."]
        }];

        /* ——— Köməkçi generatorlar ——— */
        const liList = arr => {
            if (!arr || !arr.length) return "<li>-</li>";
            return arr.map(item => `<li>${sanitize(item)}</li>`).join("");
        };

        function sanitize(str) {
            // Sadə XSS qorunması üçün
            return String(str).replace(/[&<>"'`]/g, s => ({
                "&": "&amp;",
                "<": "&lt;",
                ">": "&gt;",
                "\"": "&quot;",
                "'": "&#39;",
                "`": "&#96;"
            }[s]));
        }

        /* ——— Render ——— */
        function renderChangelog(logs) {
            const wrap = document.createElement("div");
            logs.forEach(cl => {
                        const item = document.createElement("div");
                        item.className = "cl-item";
                        item.innerHTML = `
      <div class="cl-title">[${sanitize(cl.version)}] — ${sanitize(cl.date)}</div>
      <div class="cl-badges">
        ${cl.added  ? `<span class="cl-badge">Added</span>`   : ""}
        ${cl.remove ? `<span class="cl-badge">Removed</span>` : ""}
        ${cl.fixed  ? `<span class="cl-badge">Fixed</span>`   : ""}
      </div>
      ${cl.added ? `
        <div class="cl-section">
          <h4>Added</h4>
          <ul class="cl-list">${liList(cl.addedContent)}</ul>
        </div>` : ""
      }
      ${cl.remove ? `
        <div class="cl-section">
          <h4>Removed</h4>
          <ul class="cl-list">${liList(cl.removedContent)}</ul>
        </div>` : ""
      }
      ${cl.fixed ? `
        <div class="cl-section">
          <h4>Fixed</h4>
          <ul class="cl-list">${liList(cl.fixedContent)}</ul>
        </div>` : ""
      }
    `;
    wrap.appendChild(item);
  });
  return wrap.innerHTML;
}

/* ——— Aç/bağla məntiqi + localStorage ilə “yalnız yeni versiyada auto aç” ——— */
const STORAGE_KEY = "changelog_last_version";

function getLatestVersion(logs){
  // Burda sadəcə ilk elementi "ən yeni" sayırıq (array-i yeni→köhnə sıralı saxla)
  return logs && logs.length ? String(logs[0].version) : "0";
}

function openOverlay(){
  document.getElementById("cl-overlay").style.display = "flex";
}

function closeOverlay(){
  document.getElementById("cl-overlay").style.display = "none";
}

function markAsRead(version){
  try { localStorage.setItem(STORAGE_KEY, version); } catch(e){}
}

function shouldAutoOpen(latest){
  try {
    const last = localStorage.getItem(STORAGE_KEY);
    return last !== latest; // versiya dəyişibsə aç
  } catch(e){ return true; }
}

/* ——— Başlat ——— */
function initChangelog(logs = CHANGELOGS){
  // İçeriyi doldur
  const content = document.getElementById("cl-content");
  content.innerHTML = renderChangelog(logs);

  // Eventlər
  const btnFab   = document.getElementById("cl-fab");
  const btnClose = document.getElementById("cl-close");
  const btnRead  = document.getElementById("cl-mark-read");
  const overlay  = document.getElementById("cl-overlay");
  const latest   = getLatestVersion(logs);

  btnFab.onclick = openOverlay;
  btnClose.onclick = closeOverlay;
  btnRead.onclick = () => { markAsRead(latest); closeOverlay(); };

  // Overlay fonuna kliklə də bağla (kartın kənarı)
  overlay.addEventListener("click", (e) => {
    if (e.target === overlay) closeOverlay();
  });

  // Klaviatura qısayolları
  document.addEventListener("keydown", (e) => {
    // Ctrl+L → aç
    if ((e.ctrlKey || e.metaKey) && (e.key === "l" || e.key === "L")) {
      e.preventDefault();
      openOverlay();
    }
    // Esc → bağla
    if (e.key === "Escape") closeOverlay();
  });

  // Avtomatik aç (yalnız yeni versiyada)
  if (shouldAutoOpen(latest)) openOverlay();
}

// Birbaşa çalışdır
initChangelog();
/* ——— Son ——— */
    </script>
</body>

</html>
